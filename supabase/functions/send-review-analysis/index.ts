import { serve } from "https://deno.land/std@0.168.0/http/server.ts";
import { createClient } from 'https://esm.sh/@supabase/supabase-js@2';

const corsHeaders = {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type',
};

interface EmailRequest {
  venueName: string;
  analysis: string;
}

serve(async (req) => {
  if (req.method === 'OPTIONS') {
    return new Response(null, { headers: corsHeaders });
  }

  try {
    const supabase = createClient(
      Deno.env.get('SUPABASE_URL')!,
      Deno.env.get('SUPABASE_SERVICE_ROLE_KEY')!
    );

    const { venueName, analysis }: EmailRequest = await req.json();

    // Get stakeholders for the venue
    const { data: stakeholders, error: stakeholdersError } = await supabase
      .from('venue_stakeholders')
      .select('email, name, role')
      .eq('venue_name', venueName);

    if (stakeholdersError) {
      throw new Error(`Error fetching stakeholders: ${stakeholdersError.message}`);
    }

    if (!stakeholders || stakeholders.length === 0) {
      return new Response(
        JSON.stringify({ message: 'No stakeholders found for this venue' }),
        { headers: { ...corsHeaders, 'Content-Type': 'application/json' }, status: 404 }
      );
    }

    const emailAddresses = stakeholders.map(s => s.email);

    // Send email using Resend
    const response = await fetch('https://api.resend.com/emails', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${Deno.env.get('RESEND_API_KEY')}`,
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        from: 'Hospitality Desk <reviews@hospitality-desk.com>',
        to: emailAddresses,
        subject: `Review Analysis for ${venueName}`,
        html: `
          <h1>Review Analysis for ${venueName}</h1>
          <div style="white-space: pre-wrap; font-family: sans-serif;">
            ${analysis}
          </div>
          <p style="color: #666; font-size: 12px; margin-top: 20px;">
            This analysis was generated by Hospitality Desk's AI system.
          </p>
        `,
      }),
    });

    if (!response.ok) {
      const errorData = await response.text();
      throw new Error(`Resend API error: ${errorData}`);
    }

    const data = await response.json();
    console.log('Email sent successfully:', data);

    return new Response(
      JSON.stringify({ success: true, message: 'Analysis sent to stakeholders' }),
      { headers: { ...corsHeaders, 'Content-Type': 'application/json' } }
    );

  } catch (error) {
    console.error('Error in send-review-analysis:', error);
    return new Response(
      JSON.stringify({ error: error.message }),
      { 
        status: 500, 
        headers: { ...corsHeaders, 'Content-Type': 'application/json' } 
      }
    );
  }
});